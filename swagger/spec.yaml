swagger: "2.0"
info:
  description: "The documentation for the ACMS Api"
  version: "1.0.1"
  title: "Acms Api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "sad-us-fm-1.acms.live.ws.acmsnet.org"
basePath: "/public/api/Membership/V1"
tags:
  - name: "churchs"
    description: "Everything related to churchs"
security:
  - api_key: []
schemes:
  - "https"
paths:
  /Church:
    get:
      tags:
        - churchs
      summary: "Get many churchs"
      operationId: getManyChurches
      description: "At least the id or the abbreviation must be provided, and both parameters cannot work together."
      parameters:
        - in: query
          name: "id"
          description: "The specific ID of a church. Do not provide when providing an abbreviation."
          type: string
          format: uuid
        - in: query
          name: "abbreviation"
          description: "Search by this abbreviation. Do not provide when providing an id."
          type: string
        - in: query
          name: "lastUpdateDate"
          description: "Filter by the date of the last update. Only filters when abbreviation is provided."
          type: string
          format: date-time
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Church'
securityDefinitions:
  api_key:
    type: apiKey
    name: "app-key"
    in: header
definitions:
  Church:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Code:
        type: integer
      Name:
        type: string
      ParentEntity:
        $ref: '#/definitions/ParentEntity'
      MainPicture:
        $ref: '#/definitions/Picture'
      ChurchType:
        type: integer
      Culture:
        $ref: '#/definitions/Culture'
      DistrictId:
        type: string
        format: uuid
      DistrictCode:
        type: integer
      RegionId:
        type: string
        format: uuid
      RegionCode:
        type: integer
      MailingAddress:
        $ref: '#/definitions/Address'
      Active:
        type: boolean
      MembersAmount:
        type: integer
      Pastors:
        type: array
        items:
          $ref: '#/definitions/Pastor'
      Features:
        type: array
        items:
          $ref: '#/definitions/Feature'
      ServiceTimes:
        type: array
        items:
          $ref: '#/definitions/ServiceTime'
      StreetAddress:
        $ref: '#/definitions/Address'
  ParentEntity:
    type: object
    properties:
      Name:
        type: string
      Abbreviation:
        type: string
      Id:
        type: string
        format: uuid
  Culture:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Name:
        type: string
  Address:
    type: object
    properties:
      Description:
        type: string
      Complement:
        type: string
      PostalCode:
        type: string
      LatitudeNumber:
        type: number
        format: double
      LongitudeNumber:
        type: number
        format: double
      City:
        $ref: '#/definitions/City'
  Pastor:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Name:
        type: string
      LastName:
        type: string
      FullName:
        type: string
      MainPicture:
        $ref: '#/definitions/Picture'
      HomePhone:
        type: string
      MobilePhone:
        type: string
      Email:
        type: string
      IsMainPastor:
        type: boolean
  Picture:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Url:
        type: string
        format: uri
  Feature:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Name:
        type: string
      OnlyEntityUpdate:
        type: boolean
  ServiceTime:
    type: object
    properties:
      Id:
        type: string
        format: uuid
      Name:
        type: string
      Time:
        type: string
        format: date-time
      WeekDay:
        type: int
        enum: [0 1 2 3 4 5 6]
        description: "0=Sunday. 6=Saturday."
      ScheduleType:
        type: integer
  City:
    type: object
    properties:
      Id:
        type: string
      Code:
        type: string
      Name:
        type: string
      PhoneticName:
        type: string
      LatitudeNumber:
        type: number
        format: double
      LongitudeNumber:
        type: number
        format: double
      FormattedName:
        type: string
      State:
        $ref: '#/definitions/State'
      Country:
        $ref: '#/definitions/Country'
  State:
    type: object
    properties:
      Id:
        type: string
      Code:
        type: string
      Name:
        type: string
      LatitudeNumber:
        type: number
        format: double
      LongitudeNumber:
        type: number
        format: double
      FormattedName:
        type: string
      Abbreviation:
        type: string
  Country:
    type: object
    properties:
      Id:
        type: string
      Code:
        type: string
      Name:
        type: string
      LatitudeNumber:
        type: number
        format: double
      LongitudeNumber:
        type: number
        format: double
      FormattedName:
        type: string
      Abbreviation:
        type: string
#externalDocs:
#  description: "Find out more about Swagger"
#  url: "http://swagger.io"
